// 
// Warning: This file is automatically generated
// 

#ifndef INDRI_COPIER_HPP
#define INDRI_COPIER_HPP

namespace indri { 
  namespace lang { 
    class Copier { 
    public:
      virtual ~Copier();
      virtual void defaultBefore( class Node* oldNode );
      virtual class Node* defaultAfter( class Node* oldNode, class Node* newNode );

      virtual void before( class IndexTerm* oldNode );
      virtual class Node* after( class IndexTerm* oldNode, class IndexTerm* newNode );
      virtual void before( class RawScorerNode* oldNode );
      virtual class Node* after( class RawScorerNode* oldNode, class RawScorerNode* newNode );
      virtual void before( class TermFrequencyScorerNode* oldNode );
      virtual class Node* after( class TermFrequencyScorerNode* oldNode, class TermFrequencyScorerNode* newNode );
      virtual void before( class CombineNode* oldNode );
      virtual class Node* after( class CombineNode* oldNode, class CombineNode* newNode );
      virtual void before( class WeightNode* oldNode );
      virtual class Node* after( class WeightNode* oldNode, class WeightNode* newNode );
      virtual void before( class ContextCounterNode* oldNode );
      virtual class Node* after( class ContextCounterNode* oldNode, class ContextCounterNode* newNode );
      virtual void before( class ContextSimpleCounterNode* oldNode );
      virtual class Node* after( class ContextSimpleCounterNode* oldNode, class ContextSimpleCounterNode* newNode );
      virtual void before( class ScoreAccumulatorNode* oldNode );
      virtual class Node* after( class ScoreAccumulatorNode* oldNode, class ScoreAccumulatorNode* newNode );
      virtual void before( class ContextInclusionNode* oldNode );
      virtual class Node* after( class ContextInclusionNode* oldNode, class ContextInclusionNode* newNode );
   };
 }
}

#endif // INDRI_COPER_HPP

