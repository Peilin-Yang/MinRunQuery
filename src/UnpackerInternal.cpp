//
// Warning: This file is automatically generated.
//
#include "indri/Unpacker.hpp"
#include "indri/QuerySpec.hpp"
#include "indri/XMLNode.hpp"
#include "lemur/Exception.hpp"

indri::lang::Node* indri::lang::Unpacker::_unpack( indri::xml::XMLNode* child ) {
  Node* result = 0;
  std::string type = child->getAttribute( "type" );
  std::string name = child->getAttribute( "name" );

  if( type == "IndexTerm" ) {
    result = new IndexTerm(*this);
  } else if( type == "RawScorerNode" ) {
    result = new RawScorerNode(*this);
  } else if( type == "TermFrequencyScorerNode" ) {
    result = new TermFrequencyScorerNode(*this);
  } else if( type == "CombineNode" ) {
    result = new CombineNode(*this);
  } else if( type == "WeightNode" ) {
    result = new WeightNode(*this);
  } else if( type == "ContextCounterNode" ) {
    result = new ContextCounterNode(*this);
  } else if( type == "ContextSimpleCounterNode" ) {
    result = new ContextSimpleCounterNode(*this);
  } else if( type == "ScoreAccumulatorNode" ) {
    result = new ScoreAccumulatorNode(*this);
  } else if( type == "ContextInclusionNode" ) {
    result = new ContextInclusionNode(*this);
  } else {
    LEMUR_THROW( LEMUR_RUNTIME_ERROR, "Unknown node type '" + type + "' found during unpacking." );
  }

  result->setNodeName( name );
  return result;
}

